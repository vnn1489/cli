https://vnn1489.notion.site/git-e7d33c3f6c95412e8da64bd56ca10b2d?pvs=4

~/.gitconfig ---> FILE CONFIG
git config --list ---> CHECK CREDENTIAL
git push origin  --delete BranchName ---> DELETE BRANCH ON REPOSITORY FORM LOCAL

---- CREATE A BRANCH FROM AN EXISTING BRANCH
git checkout ExistingBranch
git branch NewBranch
git checkout -b NewBranch ExistingBranch ---> SHORTER WAY FOR 2 CLI ABOVE

---- CREATE AN INDEPENDENT BRANCH
git checkout main
git branch NewBranch
git checkout -b NewBranch ---> SHORTER WAY FOR 2 CLI ABOVE

---- PULL ALL BRANCH
git branch -r | grep -v '\->' | sed "s,\x1B\[[0-9;]*[a-zA-Z],,g" | while read remote; do git branch --track "${remote#origin/}" "$remote"; done
git fetch --all
git pull --all

---- HANDLE LOCAL & REMOTE BRANCHES HAVE CHANGES THAT THE OTHER DOES NOT HAVE
git pull origin main
git merge origin/main
---> HANDLE CONFLIG
git add -A && commit && git push

---- ????
git reset --hard origin/BranchName ---> POWERFUL WAY TO RESET A LOCAL BRANCH SIMILAR TO THE STATE OF A REMOTE BRANCH
git reflog ---> LIST ALL PREVIOUS STATE
git reset --hard CommitHash ---> COMEBACK TO STATE YOU DESIRE
git reset --hard ORIG_HEAD ---> ????

---- ALIAS
alias commit='git commit -m "`date -u "+%Y%m%d_%H%M_UTC"`"' ---> VERSION 0
alias commit='git commit -m "`date -u "+%a %Y%m%d %H:%M(24h) %Z"`"' ---> VERSION 1